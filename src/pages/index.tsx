import { SignIn, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";

import { api, type RouterOutputs } from "~/utils/api";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;
  return (
    <div className="flex w-full items-center gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <input
        type="text"
        placeholder="Add some emojis"
        className="grow bg-transparent p-4"
      />
    </div>
  );
};

// given a date, return a string like "1h ago"
const timeAgo = (date: Date) => {
  const timeIntervals = [
    { interval: 31536000, label: "year" },
    { interval: 2592000, label: "month" },
    { interval: 86400, label: "day" },
    { interval: 3600, label: "hour" },
    { interval: 60, label: "minute" },
    { interval: 1, label: "second" },
  ];

  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);
  const timeInterval = timeIntervals.find(
    (interval) => seconds / interval.interval >= 1
  );
  if (!timeInterval) return "just now";

  const intervalCount = Math.floor(seconds / timeInterval.interval);
  const intervalLabel =
    timeInterval.label + (intervalCount > 1 ? "s ago" : " ago");

  return `${intervalCount} ${intervalLabel}`;
};

type PostWithAuthor = RouterOutputs["posts"]["getAll"][0];
const PostView = ({ post, author }: PostWithAuthor) => {
  return (
    <div key={post.id} className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profileImageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300">
          <span>{`@${author.username}`}</span>
          &nbsp; Â· &nbsp;
          <span className="text-slate-400">{timeAgo(post.createdAt)}</span>
        </div>
        <p>{post.content}</p>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const hello = api.posts.getAll.useQuery();
  const user = useUser();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex items-center  border-b border-slate-400 p-4">
            {user.isSignedIn ? (
              <CreatePostWizard />
            ) : (
              <div className="flex justify-center">
                <SignIn />
              </div>
            )}
          </div>
          <div className="flex flex-col ">
            {hello.data?.map((fullPost) => (
              <PostView key={fullPost.post.id} {...fullPost} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
